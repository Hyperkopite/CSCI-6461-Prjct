0000110100010000     //[1000]step1-3: int[] inputArray; inputArray's addr=128
0110010111000011     //[1001]R1=128
0000100100010101     //[1002]memory21=128
0000110100010000     //[1003]step4-6: def int search addr;
0110010111000100     //[1004]R1=256
0000100100010110     //[1005]memory22=256
0000110100010000     //[1006]step7-9: def int[] subArray;
0110010111000101     //[1007]R1=512
0000100100010111     //[1008]memory23=512
0000111000000000     //[1009]
0110011011000101     //[1010]
0001101000011111     //[1011]
0110011011000101     //[1012]
0001101000011010     //[1013]
0000101000011001     //[1014]
1000011100011001     //[1015]X3=memory[25]=z+y*32+x*32*32=1018
0000110000010100     //[1016]
0000100000011000     //[1017]memory24=R0
0000010100010101     //[1018]R1=128
0001000100011000     //[1019]R1=128+R0
0000100100011001     //[1020]memory25=128+R0
1000010100011001     //[1021]X1=memory25=128+R0
0000010100010111     //[1022]R1=512
0001000100011000     //[1023]R1=512+R0
0000100100011001     //[1024]memory25=512+R0
1000011000011001     //[1025]X2=memory25=512+R0
0000010100110110     //[1026]R1=search
0001010101000000     //[1027]R1=search-c(x1)=search-inputArray[R0]
0000111000000001     //[1028]
0110011011000101     //[1029]
0001101000000000     //[1030]
0110011011000101     //[1031]
0001101000001111     //[1032]
0000101000011001     //[1033]
1000010100011001     //[1034]x1=memory[25]=z+y*32+x*32*32=1039
0011110101000000     //[1035]if r1>=0 jump
0101010100000000     //[1036]
0001100100000001     //[1037]change R1=-R1
0000100110000000     //[1038]subArray[X2]=subArray[512+R0]=R1=search-inputArray[R0]
0011100011000000     //[1039]if R0<0 out or return to 19
0000111000000001     //[1040]
0110011011000101     //[1041]
0001101000000000     //[1042]
0110011011000101     //[1043]
0001101000011100     //[1044]
0000101000011001     //[1045]
1000011100011001     //[1046]X3=memory[25]=z+y*32+x*32*32=1052
1000010100010111     //[1047]x1=memory23=512
0000010101010100     //[1048]R1=subArray[20]
0000100100110110     //[1049]memory[memory22]=memory[256]=R1
0000110000010011     //[1050]
0000010100110110     //[1051]
0000011000010111     //[1052]R2=512
0000100000011000     //[1053]memory24=R0
0001001000011000     //[1054]R2=512+R0
0000101000011001     //[1055]memory25=512+R0
1000010100011001     //[1056]X1=memory25=512+R0
0001010101000000     //[1057]R1=R1-subArray[x1]
0000111000000001     //[1058]
0110011011000101     //[1059]
0001101000000001     //[1060]
0110011011000101     //[1061]
0001101000001100     //[1062]
0000101000011001     //[1063]
1000011000011001     //[1064]X2=memory[25]=z+y*32+x*32*32=1068
0011110110000000     //[1065]jump 1068
0010110010000010     //[1066]jump 1068+2=1070
0000010101000000     //[1067]
0000100100110110     //[1068]
0011100011000000     //[1069]
