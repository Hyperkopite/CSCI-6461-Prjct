1100010000010100     //[1000]
0000111100000001     //[1001]
0000101100010100     //[1002]m[20]=sentenceNumber=1
0000111100000001     //[1003]
0000101100010101     //[1004]m[21]=wordNumber=1
0000111100000000     //[1005]
0000101100010110     //[1006]m[22]=word.index=0
0000111100000000     //[1007]
0000101100010111     //[1008]m[23]=sentence.index=0
0000111100011110     //[1009]
0000101100011001     //[1010]assume that the search word's address is 30 memory[25]=word.address
0000111100000001     //[1011]
0110011111000101     //[1012]
0001101100001000     //[1013]R3=32+8=40
0000101100011010     //[1014]assume that the search sentence address is 40 memory[26]=sentence.address
0000111100000000     //[1015]
0000101100011011     //[1016]m[27]=sentence.head=0
0000011100010110     //[1017][addr3] r3=word.index
0001001100011001     //[1018]r3=r3+word.address
0000101100011100     //[1019]
1000010100011100     //[1020]x1=r3
0000010001000000     //[1021]r0=c(x1)
0000011100010111     //[1022]r3=sentence.index
0001001100011010     //[1023]r3=r3+sentence.address
0000101100011100     //[1024]
1000010100011100     //[1025]x1=r3
0000010101000000     //[1026]r1=c(x1)
0001110000000011     //[1027] check if the end of the word
0000111100000001     //[1028]
0110011111000101     //[1029]
0001101100000101     //[1030]
0110011111000101     //[1031]
0001101100001000     //[1032]
0000101100011100     //[1033]
1000010100011100     //[1034]X1=memory[25]=z+y*32+x*32*32=addr0
0010000001000000     //[1035]
0001100000000011     //[1036]
0001110100000011     //[1037]check if end of the sentence
0000111100000001     //[1038]
0110011111000101     //[1039]
0001101100000110     //[1040]
0110011111000101     //[1041]
0001101100010000     //[1042]
0000101100011100     //[1043]
1000010100011100     //[1044]X1=memory[25]=z+y*32+x*32*32=addr9
0010000101000000     //[1045]
0001100100000011     //[1046]
0000111000000001     //[1047]
0110011011000101     //[1048]
0001101000001110     //[1049]R3=32+14=46
0000101000011000     //[1050]m[24]=46
0001010100011000     //[1051]
0000111100000001     //[1052]
0110011111000101     //[1053]
0001101100000011     //[1054]
0110011111000101     //[1055]
0001101100011010     //[1056]
0000101100011100     //[1057]
1000010100011100     //[1058]X1=memory[25]=z+y*32+x*32*32=addr2
0010000101000000     //[1059]
0001000100011000     //[1060]
0000111000000001     //[1061]
0110011011000101     //[1062]
0001101000001100     //[1063]R3=32+12=44
0000101000011000     //[1064]m[24]=44
0001010100011000     //[1065]
0000111100000001     //[1066]
0110011111000101     //[1067]
0001101100000100     //[1068]
0110011111000101     //[1069]
0001101100000010     //[1070]
0000101100011100     //[1071]
1000010100011100     //[1072]X1=memory[25]=z+y*32+x*32*32=addr4
0010000101000000     //[1073]
0001000100011000     //[1074]
0000111000000001     //[1075]
0110011011000101     //[1076]
0001101000000000     //[1077]R3=32+0=32
0000101000011000     //[1078]m[24]=32
0001010100011000     //[1079]
0000111100000001     //[1080]
0110011111000101     //[1081]
0001101100000100     //[1082]
0110011111000101     //[1083]
0001101100001111     //[1084]
0000101100011100     //[1085]
1000010100011100     //[1086]X1=memory[25]=z+y*32+x*32*32=addr5
0010000101000000     //[1087]
0001000100011000     //[1088]
0000011100010110     //[1089]r3=word.index
0001001100011001     //[1090]r3=r3+word.address
0000101100011100     //[1091]
1000011000011100     //[1092]x2=r3
0001010110000000     //[1093]
0000111100000001     //[1094]
0110011111000101     //[1095]
0001101100000100     //[1096]
0110011111000101     //[1097]
0001101100011010     //[1098]
0000101100011100     //[1099]
1000010100011100     //[1100]X1=memory[25]=z+y*32+x*32*32=addr6
0010000101000000     //[1101]
0001000110000000     //[1102]
0000111100000000     //[1103]
0000101100010110     //[1104]
0000011100010111     //[1105]addr7  x1 do not use aging in this loop
0001101100000001     //[1106]
0000101100010111     //[1107]
0001001100011010     //[1108]
0000101100011100     //[1109]
1000010100011100     //[1110]
0000111000000010     //[1111]
0110011011000101     //[1112]
0001101000000000     //[1113]R3=32*2=64
0001011001000000     //[1114]
0000111100000000     //[1115]
0110011111000101     //[1116]
0001101100011111     //[1117]
0110011111000101     //[1118]
0001101100011001     //[1119]
0000101100011100     //[1120]
1000011000011100     //[1121]X2=memory[25]=z+y*32+x*32*32=addr3
0011111010000000     //[1122]
0000111000000010     //[1123]
0110011011000101     //[1124]
0001101000011010     //[1125]R3=32*2+26=90
0001011001000000     //[1126]
0000111100000001     //[1127]
0110011111000101     //[1128]
0001101100000010     //[1129]
0110011111000101     //[1130]
0001101100010001     //[1131]
0000101100011100     //[1132]
1000011100011100     //[1133]X3=memory[25]=z+y*32+x*32*32=addr7
0011111011000000     //[1134]
0000111000000011     //[1135]
0110011011000101     //[1136]
0001101000000000     //[1137]R3=32*3=96
0001011001000000     //[1138]
0011111010000000     //[1139]
0000111000000011     //[1140]
0110011011000101     //[1141]
0001101000011010     //[1142]R3=32*3+26=122
0001011001000000     //[1143]
0011111011000000     //[1144]
0010110010000000     //[1145]
0000011100010100     //[1146] addr2
0001101100000001     //[1147]
0000101100010100     //[1148]
0000111100000000     //[1149]
0000101100010101     //[1150]
0000011100010111     //[1151]
0001101100000010     //[1152]
0000101100011011     //[1153]
0000111100000000     //[1154]addr4
0000101100010110     //[1155]
0000011100010111     //[1156]
0001101100000001     //[1157]
0000101100010111     //[1158]
0000111100000000     //[1159]
0110011111000101     //[1160]
0001101100011111     //[1161]
0110011111000101     //[1162]
0001101100011001     //[1163]
0000101100011100     //[1164]
1000011000011100     //[1165]X2=memory[25]=z+y*32+x*32*32=addr3
0010110010000000     //[1166]
0000011100010101     //[1167]addr5
0001101100000001     //[1168]
0000101100010101     //[1169]
0000111100000001     //[1170]
0110011111000101     //[1171]
0001101100000100     //[1172]
0110011111000101     //[1173]
0001101100000010     //[1174]
0000101100011100     //[1175]
1000011000011100     //[1176]X2=memory[25]=z+y*32+x*32*32=addr4
0010110010000000     //[1177]
0000011100010110     //[1178]addr6
0001101100000001     //[1179]
0000101100010110     //[1180]
0000011100010111     //[1181]
0001101100000001     //[1182]
0000101100010111     //[1183]
0000111100000000     //[1184]
0110011111000101     //[1185]
0001101100011111     //[1186]
0110011111000101     //[1187]
0001101100011001     //[1188]
0000101100011100     //[1189]
1000011000011100     //[1190]X2=memory[25]=z+y*32+x*32*32=addr3
0010110010000000     //[1191]
0000011100010111     //[1192]addr0  x1 do not use aging in this part
0001001100011010     //[1193]
0000101100011100     //[1194]
1000010100011100     //[1195]
0000111000000010     //[1196]
0110011011000101     //[1197]
0001101000000000     //[1198]R3=32*2=64
0001011001000000     //[1199]
0000111100000001     //[1200]
0110011111000101     //[1201]
0001101100000110     //[1202]
0110011111000101     //[1203]
0001101100001110     //[1204]
0000101100011100     //[1205]
1000011000011100     //[1206]X2=memory[25]=z+y*32+x*32*32=addr8
0011111010000000     //[1207]
0000111000000010     //[1208]
0110011011000101     //[1209]
0001101000011010     //[1210]R3=32*2+26=90
0001011001000000     //[1211]
0000111100000001     //[1212]
0110011111000101     //[1213]
0001101100000110     //[1214]
0110011111000101     //[1215]
0001101100010000     //[1216]
0000101100011100     //[1217]
1000011100011100     //[1218]X1=memory[25]=z+y*32+x*32*32=addr9
0011111011000000     //[1219]
0000111000000011     //[1220]
0110011011000101     //[1221]
0001101000000000     //[1222]R3=32*3=96
0001011001000000     //[1223]
0011111010000000     //[1224]
0000111000000011     //[1225]
0110011011000101     //[1226]
0001101000011010     //[1227]R3=32*3+26=122
0001011001000000     //[1228]
0011111011000000     //[1229]
0000111100000001     //[1230]addr8
0000101100011101     //[1231]
0000111100000000     //[1232]addr9